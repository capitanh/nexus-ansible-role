---
# OS specific config
- include_vars: "{{ansible_os_family}}-vars.yml"
- include_tasks: "{{ansible_os_family}}.yml"

- name: Create nexus user
  user:
    name: "{{nexus_user}}"
    createhome: no
    system: yes
    home: "{{nexus_home}}"

- name: Ensure install dir exists
  file:
    path: "{{nexus_home}}"
    state: directory
    owner: "{{nexus_user}}"
    group: "{{nexus_user}}"

- name: Download and extract archive
  unarchive:
    src: "https://download.sonatype.com/nexus/3/latest-unix.tar.gz"
    dest: "{{nexus_home}}"
    remote_src: yes
    creates: "{{nexus_home}}/nexus-{{nexus_version}}"
    owner: "{{nexus_user}}"
    group: "{{nexus_user}}"

- name: Copy service template
  template:
    src: nexus.service
    dest: "{{systemd_dir}}"
    owner: root
    group: root
    mode: 0644

- name: Enable systemd nexus service
  service:
    name: nexus
    enabled: yes

- name: Overwrite rc config
  template:
    src: nexus.rc
    dest: "{{nexus_home}}/nexus-{{nexus_version}}/bin"
    mode: 0644
    owner: "{{nexus_user}}"
    group: "{{nexus_user}}"

- name: Change work dir owner
  file:
    path: "{{nexus_home}}/sonatype-work"
    owner: "{{nexus_user}}"
    group: "{{nexus_user}}"
    state: directory
    recurse: yes

- name: Copy java keystore file
  copy:
    src: "{{item}}"
    dest: "{{nexus_home}}/nexus-{{nexus_version}}/etc/ssl"
    owner: "{{nexus_user}}"
    group: "{{nexus_user}}"
    mode: 0644
  with_items:
    - keystore.jks
    - private.key

- name: Make sure etc nexus dir exists
  file:
    path: "{{nexus_home}}/sonatype-work/nexus3/etc"
    state: directory
    owner: "{{nexus_user}}"
    group: "{{nexus_user}}"
    mode: 0755    

- name: Enable ssl connection
  template:
    src: nexus.properties
    dest: "{{nexus_home}}/sonatype-work/nexus3/etc/nexus.properties"
    owner: "{{nexus_user}}"
    group: "{{nexus_user}}"
    mode: 0644        

- name: Create cache dirs
  file:
    path: "{{nexus_home}}/sonatype-work/nexus3/{{item}}"
    state: directory
    owner: "{{nexus_user}}"
    group: "{{nexus_user}}"
  with_items:
    - cache
    - instances
  notify: restart nexus

- name: Removing (potential) previously declared Groovy script
  uri:
    url: "http://localhost:{{nexus_port}}/service/rest/v1/script/create_repo_docker_hosted"
    user: "{{nexus_repo_user}}"
    password: "{{nexus_repo_password}}"
    method: DELETE
    force_basic_auth: yes
    status_code: 204,404

- name: Declaring Groovy script
  uri:
    url: "http://localhost:{{nexus_port}}/service/rest/v1/script"
    user: "{{nexus_repo_user}}"
    password: "{{nexus_repo_password}}"
    body_format: json
    method: POST
    force_basic_auth: yes
    status_code: 204
    body:
      name: 'gdr'
      type: 'groovy'
      content: "{{ lookup('file', 'create_repo_docker_hosted.groovy') }}"

- name: Calling Groovy script
  uri:
    url: "http://localhost:{{nexus_port}}/service/rest/v1/script/create_repo_docker_hosted/run"
    user: "{{nexus_repo_user}}"
    password: "{{nexus_repo_password}}"
    headers:
      Content-Type: "text/plain"
    method: POST
    status_code: 200,204
    force_basic_auth: yes
    body: ""      