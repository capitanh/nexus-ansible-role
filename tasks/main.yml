---
# OS specific config
- include_vars: "{{ansible_os_family}}-vars.yml"
- include_tasks: "{{ansible_os_family}}.yml"

- name: Create nexus user
  user:
    name: "{{nexus_user}}"
    createhome: no
    home: "{{nexus_home}}"

- name: Ensure install dir exists
  file:
    path: "{{nexus_home}}"
    state: directory
    owner: "{{nexus_user}}"
    group: "{{nexus_user}}"

- name: Download and extract archive
  unarchive:
    src: "http://download.sonatype.com/nexus/3/nexus-{{nexus_version}}-unix.tar.gz"
    dest: "{{nexus_home}}"
    remote_src: yes
    creates: "{{nexus_home}}/nexus-{{nexus_version}}"
    owner: "{{nexus_user}}"
    group: "{{nexus_user}}"

- name: Copy service template
  template:
    src: nexus.service
    dest: "{{systemd_dir}}/nexus.service"
    owner: root
    group: root
    mode: 0644

#- name: Create symlink to service script
#  file:
#    src: "{{systemd_dir}}/systemd-nexus.service"
#    dest: /etc/systemd/system/multi-user.target.wants/nexus.service
#    owner: root
#    group: root
#    mode: 0755
#    state: link

- name: Enable systemd nexus service
  service:
    name: nexus
    enabled: yes

- name: Overwrite rc config
  template:
    src: nexus.rc
    dest: "{{nexus_home}}/nexus-{{nexus_version}}/bin"
    mode: 0644
    owner: "{{nexus_user}}"
    group: "{{nexus_user}}"

#- name: Overwrite start script
#  template:
#    src: nexus
#    dest: "{{nexus_home}}/nexus-{{nexus_version}}/bin"
#    mode: 0755
#    owner: "{{nexus_user}}"
#    group: "{{nexus_user}}"

#- name: Reload systemctl daemon
#  command: systemctl daemon-reload

- name: Change work dir owner
  file:
    path: "{{nexus_home}}/sonatype-work"
    owner: "{{nexus_user}}"
    group: "{{nexus_user}}"
    state: directory
    recurse: yes

- name: Create cache dirs
  file:
    path: "{{nexus_home}}/sonatype-work/nexus3/{{item}}"
    state: directory
    owner: "{{nexus_user}}"
    group: "{{nexus_user}}"
  with_items:
    - cache
    - instances
  notify: restart nexus
